{"version":3,"sources":["FileSend.js","assets/transfileLogo.svg","DownloadFile.js","App.js","index.js"],"names":["FileSend","props","handleMessage","event","setState","message","target","value","handleUpload","fileList","state","formData","FormData","forEach","file","append","trim","uploading","axios","post","window","location","protocol","host","then","res","link","data","slug","catch","err","resetLink","TextArea","Input","this","Link","Typography","Title","Paragraph","maxCount","onRemove","index","indexOf","newFileList","slice","splice","beforeUpload","progress","strokeColor","strokeWidth","format","percent","parseFloat","toFixed","style","textAlign","align","direction","icon","UploadOutlined","autoSize","minRows","maxRows","onChange","placeholder","CheckCircleTwoTone","twoToneColor","fontSize","level","href","copyable","type","shape","onClick","loading","disabled","length","Component","DownloadFile","download","blob","Blob","Uint8Array","fileDownload","filename","downloadFile","url","match","params","method","responseType","info","console","log","get","name","Text","minWidth","tip","DownloadOutlined","color","App","className","src","logo","alt","height","margin","xs","sm","md","lg","xl","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c49bcc5b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Upload, Button, Input, Card, Space, Typography } from 'antd';\r\nimport { UploadOutlined, CheckCircleTwoTone } from '@ant-design/icons';\r\nimport axios from 'axios';\r\n\r\nclass FileSend extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            message: '',\r\n            fileList: [],\r\n            uploading: false,\r\n            link: ''\r\n        }\r\n    }\r\n\r\n    handleMessage = (event) => {\r\n        this.setState({\r\n            message: event.target.value\r\n        });\r\n    }\r\n\r\n    handleUpload = () => {\r\n        const { fileList } = this.state;\r\n        const formData = new FormData();\r\n        fileList.forEach(file => {\r\n            formData.append('file', file);\r\n            formData.append('message', this.state.message.trim());\r\n        });\r\n\r\n        this.setState({\r\n            uploading: true,\r\n        });\r\n\r\n\r\n        axios.post(`${window.location.protocol}//${window.location.host}/uploads`, formData)\r\n            .then((res) => this.setState({ link: `${window.location.protocol}//${window.location.host}/${res.data.data.slug}`, uploading: false }))\r\n            .catch((err) => this.setState({ uploading: false }));\r\n\r\n        // You can use any AJAX library you like\r\n        // reqwest({\r\n        //     url: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n        //     method: 'post',\r\n        //     processData: false,\r\n        //     data: formData,\r\n        //     success: () => {\r\n        //         this.setState({\r\n        //             fileList: [],\r\n        //             uploading: false,\r\n        //         });\r\n        //         message.success('upload successfully.');\r\n        //     },\r\n        //     error: () => {\r\n        //         this.setState({\r\n        //             uploading: false,\r\n        //         });\r\n        //         message.error('upload failed.');\r\n        //     },\r\n        // });\r\n        // console.log({ \"file\": formData.get('file'), \"message\": formData.get('message') });\r\n    };\r\n\r\n    resetLink = () => {\r\n        this.setState({\r\n            link: '',\r\n            fileList: [],\r\n            message: ''\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { TextArea } = Input;\r\n        const { uploading, fileList } = this.state;\r\n        const { Link, Title, Paragraph } = Typography;\r\n\r\n        const props = {\r\n            maxCount: 1,\r\n            onRemove: file => {\r\n                this.setState(state => {\r\n                    const index = state.fileList.indexOf(file);\r\n                    const newFileList = state.fileList.slice();\r\n                    newFileList.splice(index, 1);\r\n                    return {\r\n                        fileList: newFileList,\r\n                    };\r\n                });\r\n            },\r\n            beforeUpload: file => {\r\n                this.setState(state => ({\r\n                    fileList: [file],\r\n                }));\r\n                return false;\r\n            },\r\n            fileList,\r\n            progress: {\r\n                strokeColor: {\r\n                    '0%': '#108ee9',\r\n                    '100%': '#87d068',\r\n                },\r\n                strokeWidth: 3,\r\n                format: percent => `${parseFloat(percent.toFixed(2))}%`\r\n            }\r\n        };\r\n\r\n        return (\r\n            <>\r\n                <Card style={{ textAlign: 'center' }}>\r\n                    <Space align=\"center\" direction=\"vertical\">\r\n                        {!this.state.link &&\r\n                            <>\r\n                                <Upload {...props}>\r\n                                    <Button icon={<UploadOutlined />}>Upload File</Button>\r\n                                </Upload>\r\n                                <TextArea autoSize={{ minRows: 6, maxRows: 9 }} value={this.state.message} onChange={this.handleMessage} placeholder=\"Message...\" />\r\n                            </>}\r\n                        {this.state.link &&\r\n                            <>\r\n                                <CheckCircleTwoTone twoToneColor=\"#52c41a\" style={{ fontSize: '70px' }} />\r\n                                <Title>You're done!</Title>\r\n                                <Title level={5}>Copy the download link below.</Title>\r\n                            </>}\r\n                        {this.state.link &&\r\n                            <Link href={this.state.link} target=\"_blank\">\r\n                                <Paragraph copyable>\r\n                                    {this.state.link}\r\n                                </Paragraph>\r\n                            </Link>}\r\n                        {this.state.link ? <Button type=\"primary\" shape=\"round\" onClick={this.resetLink}>Another Link</Button> : <Button type=\"primary\" shape=\"round\" loading={uploading} disabled={fileList.length === 0} onClick={this.handleUpload}>Get Link</Button>}\r\n                    </Space>\r\n                </Card>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FileSend","export default __webpack_public_path__ + \"static/media/transfileLogo.4e970537.svg\";","import React, { Component } from 'react'\r\nimport { Card, Divider, Button, Typography, Spin, message } from 'antd';\r\nimport { DownloadOutlined } from '@ant-design/icons';\r\nimport axios from 'axios';\r\nimport fileDownload from 'js-file-download';\r\n\r\nexport class DownloadFile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            message: '',\r\n            filename: '',\r\n            file: null,\r\n            loading: true\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        axios.get(`${window.location.protocol}//${window.location.host}/uploads/${this.props.match.params.slug}`)\r\n            .then((res) => {\r\n                this.setState({\r\n                    message: res.data.message,\r\n                    filename: res.data.name,\r\n                    loading: false\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                this.setState({\r\n                    message: 'File not found!',\r\n                });\r\n            });\r\n    }\r\n\r\n    download = () => {\r\n        let blob = new Blob([new Uint8Array(this.state.file.data)]);\r\n        fileDownload(blob, this.state.filename);\r\n    }\r\n\r\n    downloadFile = () => {\r\n        axios({\r\n            url: `${window.location.protocol}//${window.location.host}/download/${this.props.match.params.slug}`,\r\n            method: 'GET',\r\n            responseType: 'blob'\r\n        })\r\n            .then((res) => {\r\n                message.info('Download started.');\r\n                fileDownload(res.data, this.state.filename);\r\n            })\r\n            .catch((err) => console.log(err));\r\n    }\r\n\r\n    render() {\r\n        const { Title, Text } = Typography;\r\n        return (\r\n            <div>\r\n                <Card style={{ minWidth: '240px', textAlign: 'center' }}>\r\n                    {this.state.loading && <Spin tip=\"Fetching file from server please wait...\"></Spin>}\r\n                    {!this.state.loading &&\r\n                        <>\r\n                            <DownloadOutlined style={{ fontSize: '70px', color: '#ccc' }} />\r\n                            <Title level={4}>Ready when you are!</Title>\r\n                            <Text type=\"secondary\">Link expires in 24 hours</Text>\r\n                            <Divider />\r\n                            <p style={{ textAlign: 'left' }}>{this.state.message}</p>\r\n                            <Divider />\r\n                            <p style={{ textAlign: 'left' }}>{this.state.filename}</p>\r\n                            <Divider />\r\n                            <Button type=\"primary\" shape=\"round\" onClick={this.downloadFile}>Download</Button>\r\n                        </>}\r\n                </Card>\r\n                {/* <img src={this.state.image} alt=\"\" /> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DownloadFile\r\n","import './App.css';\nimport FileSend from './FileSend';\nimport logo from './assets/transfileLogo.svg';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport DownloadFile from './DownloadFile';\nimport { Row, Col } from 'antd';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <nav>\n          <ul className=\"navigation\">\n            <li><img src={logo} alt=\"logo\" height={20} style={{ margin: ' 15px 20px' }} /></li>\n          </ul>\n        </nav>\n        <Row className=\"main\">\n          <Col xs={24} sm={24} md={12} lg={12} xl={12} className=\"main__info\">\n            <div>\n              <h2>Transfer Files</h2>\n              <ul>\n                <li>Free</li>\n                <li>Fast</li>\n                <li>No registration</li>\n              </ul>\n            </div>\n          </Col>\n          <Col xs={24} sm={24} md={12} lg={12} xl={12} className=\"main__file\">\n            <Switch>\n              <Route exact path=\"/\" component={FileSend}></Route>\n              <Route path=\"/:slug\" component={DownloadFile}></Route>\n            </Switch>\n          </Col>\n        </Row>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}